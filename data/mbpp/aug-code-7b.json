{"train": [], "test": [" def sort_matrix(matrix):\n    return sorted(matrix, key=sum)", " def rgb_to_hsv(r, g, b):\n    r, g, b = r/255.0, g/255.0, b/255.0\n    mx = max(r, g, b)\n    mn = min(r, g, b)\n    df = mx-mn\n    if mx == mn:\n        h = 0\n    elif mx == r:\n        h = (60 * ((g-b)/df) + 360) % 360\n    elif mx == g:\n        h = (60 * ((b-r)/df) + 120) % 360\n    elif mx == b:\n        h = (60 * ((r-g)/df) + 240) % 360\n    if mx == 0:\n        s = 0\n    else:\n        s = (df/mx)*100\n    v = mx*100\n    return h, s, v\n\ndef recursive_list_sum(data_", " ```\ndef sort_matrix(matrix):\n    return sorted(matrix, key=sum)\n```\n\n\n\n", " def sort_matrix(matrix):\n    return sorted(matrix, key=lambda x: sum(x))"]}